# This file contains common pin mappings for the Geeetech A10M modified 
# GT2560 v3 board uses a firmware compiled for the AVR
# atmega2560.
[include shell_command.cfg]
[include kiauh_macros.cfg]

[virtual_sdcard]
path: ~/gcode_files

[save_variables]
filename:  ~/variables.cfg
#   Required - provide a filename that would be used to save the
#   variables to disk e.g. ~/variables.cfg
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
baud: 250000

[printer]
kinematics: cartesian
max_velocity: 250
max_accel: 1500
max_accel_to_decel: 1250
max_z_velocity: 10
max_z_accel: 120
square_corner_velocity: 6.0

[stepper_x]
step_pin: PC0
dir_pin: PG2
enable_pin: !PC2
microsteps: 16
rotation_distance: 39.85
endstop_pin: ^!PA2
position_min: -10
position_endstop: -10
position_max: 230
homing_speed: 35

[stepper_y]
step_pin: PC6
dir_pin: PC4
enable_pin: !PA7
microsteps: 16
rotation_distance: 39.85
endstop_pin: ^!PA6
position_min: -5
position_endstop: -5
position_max: 223
homing_speed: 35

[stepper_z]
step_pin: PA3
dir_pin: !PA1
enable_pin: !PA5
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 240
position_min: -5
homing_speed: 3

[extruder]
step_pin: PL3
dir_pin: !PL5
enable_pin: !PB6
microsteps: 16
#rotation_distance: 34.4
rotation_distance: 7.25
nozzle_diameter: 0.6
filament_diameter: 1.63
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
#sensor_type: ATC Semitec 104GT-2
sensor_pin: PK3
#pullup_resistor: 4700
min_temp: 0
max_temp: 275
min_extrude_temp: 160
max_extrude_only_distance: 700
control: pid
pid_Kp: 29.667
pid_Ki: 2.355
pid_Kd: 93.451
pressure_advance: 0.42
pressure_advance_smooth_time: 0.080
max_extrude_cross_section: 50

[extruder1]
step_pin: PL0   
dir_pin: !PL2
enable_pin: !PL1
microsteps: 16
rotation_distance: 7.25
#step_distance: .002304147
nozzle_diameter: 0.6
filament_diameter: 1.750
max_extrude_only_distance: 700
pressure_advance: 0.42
pressure_advance_smooth_time: 0.080
#pressure_advance_lookahead_time: 0.020
shared_heater: extruder
max_extrude_cross_section: 50

[heater_bed]
heater_pin: PG5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK2
min_temp: 0
max_temp: 120
control: pid
pid_Kp: 73.964
pid_Ki: 2.315
pid_Kd: 590.784

[bltouch]
sensor_pin: ^PC7
control_pin: PB5
#pin_move_time: 1.5
pin_up_reports_not_triggered: False
pin_up_touch_mode_reports_triggered: False
probe_with_touch_mode: False
x_offset: -44
y_offset: -3
z_offset: 1.27
speed: 2
#lift_speed: 1.0
samples: 2
sample_retract_dist: 8
SAMPLES_TOLERANCE: 0.4

[bed_mesh]
speed: 35
horizontal_move_z: 7
mesh_min: 44,20
mesh_max: 183, 200
probe_count: 5,5

[bed_screws]
screw1: 30,32
screw2: 199,32
screw3: 199,200
screw4: 30,200

[safe_z_home]
home_xy_position: 159,119
speed: 35
z_hop: 20
#z_hop_speed: 3

[fan]
pin: PH6
cycle_time: 0.150
kick_start_time: 0.300

#Original Geeetech A10M Display
[display]
lcd_type: hd44780
rs_pin: PD1
e_pin: PH0
d4_pin: PH1
d5_pin: PD0
d6_pin: PE3
d7_pin: PC1
encoder_pins: ^PL7, ^PG1
click_pin: ^!PD2

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[force_move]
enable_force_move: True

[respond]
default_type: command

[firmware_retraction]
retract_length: 6.8
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 30
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 25
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[gcode_arcs]
resolution: 0.25

[gcode_macro T1]
description: Select extruder 1
gcode:
  ACTIVATE_EXTRUDER extruder=extruder1
  SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder1"'

[gcode_macro T0]
description: Select extruder 2
gcode:
  ACTIVATE_EXTRUDER extruder=extruder
  SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder"'

[gcode_macro START_GCODE]
gcode:
  {% set svv = printer.save_variables.variables %}
  ACTIVATE_EXTRUDER extruder={svv.currentextruder}

[gcode_macro M0]
gcode:
    {% set X = params.X|default(-8)|float %}
    {% set Y = params.Y|default(205)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M0_state
    PAUSE
    G91
    G1 E-6.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E50 F1000
    RESTORE_GCODE_STATE NAME=M0_state
    
[gcode_macro START_PRINT]
description: Start printing
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(205)|float %}
    {% set BED = params.BED|default(55)|float %}
    #{% set CHAMBER = params.CHAMBER|default(30)|float %}
    G90 # use absolute coordinates
    M83 # extruder relative mode
    M104 S160 # temporary
    M140 S{BED} # set final bed temp
    M109 S160 # wait temporary nozzle temp to prevent oozing during homing and auto bed leveling
    M190 S{BED} # wait for bed temp to stabilize
    G28 # Home all axes    
    BED_MESH_PROFILE LOAD=default 
    G1 Z50 F240
    G1 X-9.4 Y150 F3000  
    M106 S100 ;cool
    M109 S{EXTRUDER} # wait for nozzle temp to stabilize 
    G1 X2 Y150 F5000
    G1 X-9 Y150 F5000
    G1 Z0.2 F800  
    G92 E0 # Reset Extruder
    M106 S0 ;off cool
    G1 X2 Y5 Z0.15 F2000 # Move to start position
    G4 P250 #wait 0.25s
    G1 X200 Y5 Z0.35 F280 E28 #; Draw the first line
    G92 E0 # Reset Extruder
    G1 Z0.33 F2600 # Move Z Axis up little to prevent scratching of Heat Bed
    G4 P25 #pause
# ================================================================================
# GCode Macro: END_PRINT
# Add END_PRINT in your slicers ending script
# ================================================================================
[gcode_macro END_PRINT]
description: Stop printing
gcode =
    G10 ; retract
    G10 ; retract
    G91 ; Relative Positioning
    G1 Z+20 ; Move Z up so it doesn't hit anything
    M106 S100 ;cool
    G1 E-5 F3200 ; Retract-4
    G1 E-10 F1200 ; Retract-10
    G90 ; Absolute Positioning
    G1 X-9.7 Y205 F4500 ; Move to front
    G4
    G1 X4 Y205 F2500 ; Move back 
    G4
    G1 X-8.5 Y205 F3000 ; Move to front
    M104 S0 ; Turn off Extrude (set it to 0)
    M140 S0 ; Turn off Bed (set it to 0)
    M84 ; Disable steppers
    G4 P7000 ;wait 7s
    M106 S0 ; turn off cooling fan
# ================================================================================
[gcode_macro G29]
gcode:
  {% set t = params.T|default(0)|float %}
  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    G90
    G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G90
    G1 Z15 F240
    G1 X115 Y115 F6000
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}

[output_pin BEEPER_pin]
pin: PD3
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000

# M300 : Play tone, Beeper support, as commonly found on usual LCD displays
# Usage: M300 [P<ms>] [S<Hz>]      P is the tone duration, S the tone frequency.
[gcode_macro M300]
gcode:
# Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[delayed_gcode clear_display]
initial_duration: 0.
gcode:
    M117

[gcode_macro M701]
gcode:
    LOAD_FILAMENT

[gcode_macro M702]
gcode:
    UNLOAD_FILAMENT

[gcode_macro M125]
gcode:
    PARK

[gcode_macro M205]
gcode:
    {% if 'X' in params %}
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={X}
    {% endif %}
# 'Marlin' style M808 compatibility macro for SDCard looping
[gcode_macro M808]
gcode:
    {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
    {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
    {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro G80]
gcode:
# G28 #Avoid double homing if using PrusaSlicer or other default gcode.
 BED_MESH_CALIBRATE
 G1 X0 Y0 Z0.4 F4000
 M117
 M400

[gcode_macro G81]
gcode:
 BED_MESH_OUTPUT

[delayed_gcode clear_display]
initial_duration: 0.
gcode:
  M117

[pause_resume]

#If not using with Octoprint remove the menu.
#[menu __main __octoprint]
#type: disabled

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.242500, -0.143750, -0.025000, -0.055000, -0.237500
#*# 	-0.205000, -0.240000, -0.080000, -0.121250, -0.260000
#*# 	-0.250000, -0.056250, -0.015000, -0.138750, -0.137500
#*# 	-0.126250, -0.136250, -0.053750, 0.108750, -0.107500
#*# 	-0.003750, 0.003750, 0.016250, 0.018750, -0.160000
#*# tension = 0.2
#*# min_x = 44.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 5
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 184.0
